@inherits Shared.RazorComponentBase
@implements IDisposable
<div class="fixed-bottom @B.BackgroundDark " @ref="_layoutRef">

    <div class="position-absolute rounded-circle text-center text-white visible-symbol @B.BackgroundDark" @onclick="HideOrShowAsync">
        <Icon IconClass="@(_opend?"fa fa-chevron-down":"fa fa-chevron-up")"></Icon>
    </div>
    <Columns IsVcentered="true" class="@B.M4">
        <Column IsNarrowTablet="true">
            <Columns IsMobile="true" IsVcentered="true" class="@B.MR4">
                <Column Size="Size.OneThird" class="@B.TextCentered">
                    <div @onclick="PlayControlFlowService.PrevAsync" @onclick:stopPropagation>
                        <Button IsRounded="true" class="circle-button">
                            <Icon IconClass="fa fa-step-backward"></Icon>
                        </Button>
                    </div>
                </Column>
                <Column Size="Size.OneThird" class="@B.TextCentered">
                    <div @onclick="OnPlayOrResumeClickAsync" @onclick:stopPropagation>


                        <Button IsRounded class="circle-button ">

                            <Icon IconClass="@(AudioPlayService.Paused?"fa fa-play":"fa fa-pause")"></Icon>
                        </Button>
                    </div>
                </Column>
                <Column Size="Size.OneThird" class="@B.TextCentered">
                    <div @onclick="PlayControlFlowService.NextAsync" @onclick:stopPropagation>
                        <Button IsRounded class="circle-button">
                            <Icon IconClass="fa fa-step-forward"></Icon>
                        </Button>
                    </div>
                </Column>
            </Columns>
        </Column>
        <Column>
            <Columns Gap="@Gap.Gap0" IsVcentered="true" IsMobile="true">
                <Column IsNarrow="true" class="@B.Join(B.PR4)">
                    <Image Size="Size.Square48" IsFullwidth="true">
                        <a @onclick="PlayAlbumClick">
                            <img src="@Nvl(AudioPlayService.CurrentPlayableItem?.Album?.picUrl,AudioPlayService.CurrentPlayableItem?.Album?.blurPicUrl,"asset/Vinyl_music_128px.png")" />
                        </a>
                    </Image>
                </Column>
                <Column class="@B.PR4">
                    @if (AudioPlayService.CurrentPlayableItem != null)
                    {


                        <div class="@B.TextWhite text-nowrap overflow-hidden text-overflow-ellipsis">

                            @(AudioPlayService.CurrentPlayableItem.Title)
                            @if (AudioPlayService.CurrentPlayableItem.Artists?.Count > 0)
                            {
                                <span>-</span>
                                @foreach (var item in AudioPlayService.CurrentPlayableItem.Artists)
                                {
                                    <span class="artists-a">
                                        <a class="el-link @B.TextWhite" href="/artist/@item.id">@item.name</a>
                                    </span>
                                }
                            }
                        </div>
                    }
                    <Columns IsGapless="true">
                        <Slider IsSmall="true" Value="@AudioPlayService.Position.TotalSeconds" class="@B.Join(B.MT0, B.MR2, B.MB2)"
                                IsCircle="true"
                                TValue="double"
                                ValueChanged="x => AudioPlayService.Position = TimeSpan.FromSeconds(x)"
                                max="@AudioPlayService.Duration.TotalSeconds"></Slider>
                        <div class="@B.Join(B.HiddenMobile) ">
                            @(AudioPlayService.Position.ToString(@"mm\:ss") + "/" + AudioPlayService.Duration.ToString(@"mm\:ss"))
                        </div>
                    </Columns>

                </Column>

                <Column IsNarrow="true" class="@B.Join(B.MR2,B.ML2,B.HiddenMobile)">
                    <Columns IsVcentered="true" IsGapless="true" class="font-weight-light light-icons">
                        <Column>
                            <a @onclick="OpenPlayList" class="js-openplaylist-a">
                                <div class="position-relative">
                                    @if (PlayControlFlowService.Tracks.Count < 100)
                                    {
                                        <Badge Color="Color.Danger">@PlayControlFlowService.Tracks.Count</Badge>
                                    }
                                    else
                                    {
                                        <Badge Color="Color.Danger">99+</Badge>
                                    }

                                </div>
                                <Icon IconClass="iconfont icon-list-01"></Icon>
                            </a>
                        </Column>
                        <Column>
                            <a>
                                <Icon IconClass="iconfont icon-folder-add"></Icon>
                            </a>
                        </Column>
                        <Column>
                            <a data-tooltip="@PlayControlFlowService.PlayMode.Name" class="@B.TooltipArrow"
                               @onclick="PlayControlFlowService.ChangePlayModel" @onclick:stopPropagation>
                                <Icon IconClass="@PlayControlFlowService.PlayMode.IconClass"></Icon>
                            </a>
                        </Column>
                        <Column>
                            <a @onclick="()=> AudioPlayService.Muted= !AudioPlayService.Muted">
                                @if (AudioPlayService.Muted)
                                {
                                    <Icon IconClass="iconfont icon-shengyinjingyin"></Icon>

                                }
                                else if (AudioPlayService.Volumn <= 20)
                                {
                                    <Icon IconClass="iconfont icon-shengyinwu"></Icon>

                                }

                                else
                                {
                                    <Icon IconClass="iconfont icon-shengyinkai"></Icon>

                                }

                            </a>
                        </Column>
                    </Columns>
                </Column>
                <Column IsNarrow="true" class="@B.Join(B.M4,B.HiddenMobile)">
                    <Slider TValue="double" IsSmall="true" Value="@AudioPlayService.Volumn" IsCircle="true"
                            data-tooltip="@AudioPlayService.Volumn.ToString("F0")"
                            class="@B.TooltipArrow"
                            ValueChanged="x=>AudioPlayService.Volumn=x"
                            max="100"></Slider>
                </Column>
            </Columns>
        </Column>
    </Columns>
</div>
<Quickview @ref="_tracksQuickView" IsLeft="false" TriggerSelector=".js-openplaylist-a">
    <HeaderSlot>
        播放列表
    </HeaderSlot>
    <BodySlot>
        <div class="@B.M2 text-small">
            <Level IsMobile>
                <LevelLeft>
                    <p>共<span>@PlayControlFlowService.Tracks.Count</span>首</p>

                </LevelLeft>
                <LevelRight>
                    <Columns IsMobile IsCentered>
                        <Column>
                            <a>
                                <Icon IconClass="iconfont icon-folder-add"></Icon>
                            </a>
                        </Column>
                        <Column>
                            <a data-tooltip="@PlayControlFlowService.PlayMode.Name" class="@B.Join(B.TooltipArrow,B.TooltipBottom)"
                               @onclick="PlayControlFlowService.ChangePlayModel" @onclick:stopPropagation>
                                <Icon IconClass="@PlayControlFlowService.PlayMode.IconClass"></Icon>
                            </a>

                        </Column>

                    </Columns>

                </LevelRight>
            </Level>
            <Divider></Divider>
            <DataTable Data="PlayControlFlowService.Tracks" IsNarrow="true" TItem="object"
                       IsHoverable
                       IsBordered="false" IsStriped IsFullwidth>

                <EmptySlot>
                    <div>暂无内容</div>
                </EmptySlot>
                <ColumnsSlot>
                    <DataTableColumn Label="音乐标题">
                        <TdSlot>
                            @{
                                var track = context as Models.PlayableItemBase;
                            }
                            <div class="@B.Flex @B.AlignItemsCenter ">
                                <div class="el-link text-wrap e" @onclick="()=>PlayAsync(track)">
                                    <Icon IconClass="fa fa-play-circle"></Icon>
                                    <span>@track.Title</span>
                                </div>


                                @if (track.MvId > 0)
                        {
                                <a href="/mv/@track.MvId" class="mv-link">
                                    <Icon IconClass="fa fa-youtube-play" Color="Color.Danger"></Icon>
                                </a>
                                }
                            </div>
                        </TdSlot>
                    </DataTableColumn>
                    <DataTableColumn Label="歌手" TdClass="@B.HiddenMobile" ThClass="@B.HiddenMobile">

                        <TdSlot>
                            @{
                                var track = context as Models.PlayableItemBase;
                            }

                            <div class="@B.Flex @B.AlignItemsCenter count-desc " style="max-width:5em">
                                @foreach (var item in track.Artists.Take(5))
                        {
                                <a class="el-link playlist-tags text-truncate" href="/artist/@item.id">@item.name</a>
                                }
                            </div>


                        </TdSlot>
                    </DataTableColumn>
                    <DataTableColumn Label="时长">
                        <TdSlot>
                            @{
                                var track = context as Models.PlayableItemBase;
                            }
                            <div class="overflow-hidden text-nowrap text-overflow-ellipsis count-desc">
                                @track.Duration.ToDateTime().ToString(@"mm\:ss")
                            </div>
                        </TdSlot>
                    </DataTableColumn>
                    <DataTableColumn Label="操作">
                        <TdSlot>
                            @{
                                var track = context as Models.PlayableItemBase;
                            }
                            <div class="count-desc el-link  " @onclick="()=>DeleteTrack(track)">
                                <Icon IconClass="fa fa-trash"></Icon>
                            </div>
                        </TdSlot>
                    </DataTableColumn>
                </ColumnsSlot>

            </DataTable>
        </div>

    </BodySlot>
</Quickview>
<div class="right-nav font-weight-bold @B.HiddenTablet">
    <a @onclick="OpenPlayList" class="js-openplaylist-a">
        &lt;

    </a>

</div>
